1:注解与XML的比较

	1.1： XML在开发的时候比较慢，代码冗余度高，在更新Java累的时候XML不会同步更新，但是它在维护的时候查看类之间的关系比较方便
	1.2 ：注解：开发速度快，维护速度慢
	
	1.3: 使用注解，
2:Hibernate查询策略
	H中的一级缓存（默认存在）它也称为session级别缓存，不是用来提升性能，是用来处理事务的；二级缓存为sessionFactory缓存，对所有的session都有效，生命周期与sessionFactory相同，
	（sessionFactory是单例，而且项目启动就会创建）
	H:有两种查询方式，第一种为session，第二种为hql
	1.1：session.save() update() delete() get() load():此方式仅仅操作一条几率，默认不用任何的配置就支持二级缓存，因此：read-only对session是生效的
	在session中 如果二级缓存中配置了：read-only则session.update,delete操作会失败，但是save()和 get() load()是成功的
	1.2：HQL：此方式默认是用来操作多条记录，list()  executeUpdate()此方式默认二级缓存的配置包括read-only是无效的。
	注意hql是没有save方法，如果需要插入数据只能调用session的save
3：相应语句的执行流程：
	get(),load():如果二级缓存中存在，则流程为：直接到二级缓存取数据，如果缓存不存在，则是先到二级缓存，再到数据库，再把数据返回到二级缓存，最后返回给页面；
	delete(),update()：先回去更新二级缓存中数据，但是如果缓存配置为：read-only,则更新失败
	save()：添加数据直接交给数据库，因此read-only是无效的
	HQL:此方式默认是不支持二级缓存
	list()：查询多个，直接到数据库查询，把数据存到二级缓存，最后返回页面，（只存不取，交给二级缓存是给get和load使用）
	executeUpdate():又不是不支持二级缓存，直接到数据库更新，H会保证数据库与缓存同步更新。
	