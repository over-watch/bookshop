<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping package="cn.it.shop.model">
    <class name="Forder" table="forder" catalog="shop">
        <id name="id" type="java.lang.Integer">
            <column name="id" />
            <generator class="native" />
        </id>
        <property name="name" type="java.lang.String">
            <column name="name" length="20" />
        </property>
        <property name="phone" type="java.lang.String">
            <column name="phone" length="20" />
        </property>
        <property name="remark" type="java.lang.String">
            <column name="remark" length="20" />
        </property>
        <property name="date" type="java.sql.Timestamp">
            <column name="date" length="0" not-null="false" />
        </property>
        <property name="total" type="java.math.BigDecimal">
            <column name="total" precision="8" />
        </property>
        <property name="post" type="java.lang.String">
            <column name="post" length="20" />
        </property>
        <property name="address" type="java.lang.String">
            <column name="address" length="200" />
        </property>
        <many-to-one name="user" class="User">
        	<column name="uid" />
        </many-to-one>
        <many-to-one name="status" class="Status">
        	<column name="sid" />
        </many-to-one>
        <!--
        	步骤：如果是多对一，则通过子表中的外键，查找对应主表中的主键
        	如果是一对多，则通过主表中的主键，去查找子表中对应外键。
        	查询有关：lazy=“true”是否支持懒加载，fetch=“join”关联对象抓去策略，为了提升性能此处不应该配置
        	更新有关：cascade=“all”是否支持级联操作，H中有独特级联插入   inverse=“false” 反向，制定谁来维护外键， 建议为true，
        	如果为false，则当前表会多发update语句
        	student.setName("abc");
        	student.setGrade(new Grade(1));
        	studentService.save(student);
          -->
        <set name="sorderSet" lazy="true" fetch="join" inverse="true" cascade="all">
        	<!-- 代表的是外键 -->
        	<key>
        		<column name="fid"></column>
        	</key>
        	<one-to-many class="Sorder"/>
        </set>
    </class>
</hibernate-mapping>
